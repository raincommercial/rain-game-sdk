/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AllStandardOpsStateBuilder,
  AllStandardOpsStateBuilderInterface,
} from "../AllStandardOpsStateBuilder";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_size",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_end",
        type: "uint256",
      },
    ],
    name: "InvalidCodeAtRange",
    type: "error",
  },
  {
    inputs: [],
    name: "WriteError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vm_",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes[]",
            name: "sources",
            type: "bytes[]",
          },
          {
            internalType: "uint256[]",
            name: "constants",
            type: "uint256[]",
          },
        ],
        internalType: "struct StateConfig",
        name: "config_",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "entrypoint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minFinalStackIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stackIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stackLength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "argumentsLength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "storageLength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "opcodesLength",
            type: "uint256",
          },
        ],
        internalType: "struct Bounds[]",
        name: "boundss_",
        type: "tuple[]",
      },
    ],
    name: "buildState",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes[]",
            name: "sources",
            type: "bytes[]",
          },
          {
            internalType: "uint256[]",
            name: "constants",
            type: "uint256[]",
          },
        ],
        internalType: "struct StateConfig",
        name: "stateConfig_",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "entrypoint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minFinalStackIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stackIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stackLength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "argumentsLength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "storageLength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "opcodesLength",
            type: "uint256",
          },
        ],
        internalType: "struct Bounds",
        name: "bounds_",
        type: "tuple",
      },
    ],
    name: "ensureIntegrity",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "packedFnPtrs_",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "source_",
        type: "bytes",
      },
    ],
    name: "ptrSource",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "stackPopsFnPtrs",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "stackPushesFnPtrs",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5062000031620000206200005d565b6200007960201b62000c201760201c565b6001600160a01b03166080526200004b62000020620000ee565b6001600160a01b031660a0526200065b565b6060620000746200010560201b62000cab1760201c565b905090565b600080620000b383604051602001620000939190620005f9565b604051602081830303815290604052620002f460201b62000e391760201c565b90508051602082016000f091506001600160a01b038216620000e85760405163046a55db60e11b815260040160405180910390fd5b50919050565b6060620000746200032260201b62000e651760201c565b604080516105e08101825260006020808301829052928201819052606082018190526080820181905260a0820181905260c08201526001600160401b03620004be831b62000fe617811660e08301819052620004c4841b62000fec1782166101008401819052620004ca851b62000ff217831661012085018190526101408501839052610160850183905261018085018390526101a08501819052620004d0861b62000ff81784166101c08601526200051d861b6200106d1784166101e0860181905261020086018190526102208601819052610240860152610260850182905261028085018390526102a085018390526102c085018290526102e0850182905262000523861b6200107317841661030086018190526103208601919091526103408501839052610360850181905261038085018390526103a08501919091526103c084018290526103e08401819052610400840181905261042084018190526104408401819052610460840181905261048084018190526104a084018190526104c084018190526104e08401819052610500840181905261052084015262000566841b620010e21782166105408401526200056c841b620010e817821661056084015261058083018190526200057290931b620010ee17166105a08201526105c08082019290925290815290565b60608151826040516020016200030c92919062000615565b6040516020818303038152906040529050919050565b604080516105e08101825260006020808301829052928201819052606082018190526080820181905260a0820181905260c08201526001600160401b03620004c4831b62000fec17811660e08301819052610100830181905261012083018190526101408301819052610160830181905261018083018190526101a083018190526200052390931b6200107317166101c08201526101e08101829052610200810182905261022081018290526102408101829052610260810182905261028081018290526102a081018290526102c081018290526102e08101829052610300810182905261032081018290526103408101829052610360810182905261038081018290526103a081018290526103c081018290526103e08101829052610400810182905261042081018290526104408101829052610460810182905261048081018290526104a081018290526104c081018290526104e08101829052610500810182905261052081018290526105408101829052610560810182905261058081018290526105a081018290526105c08082019290925290815290565b50600290565b50600190565b50600390565b6000808211620005135760405162461bcd60e51b81526020600482015260096024820152680c17d3d4115490539160ba1b60448201526064015b60405180910390fd5b5060020260010190565b50600090565b6000808211620005625760405162461bcd60e51b81526020600482015260096024820152680c17d3d4115490539160ba1b60448201526064016200050a565b5090565b60020190565b60030190565b6000601f821680620005b55760405162461bcd60e51b815260206004820152600b60248201526a10905117d3d4115490539160aa1b60448201526064016200050a565b92915050565b6000815160005b81811015620005de5760208185018101518683015201620005c2565b81811115620005ee576000828601525b509290920192915050565b6000815260006200060e6001830184620005bb565b9392505050565b606360f81b815260e083901b6001600160e01b03191660018201526880600e6000396000f360b81b6005820152600062000653600e830184620005bb565b949350505050565b60805160a051611ee962000681600039600061086c0152600061083f0152611ee96000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80634fc976e9116100505780634fc976e9146102185780639b0bc3491461022d578063a46c2a311461024057600080fd5b806317376ae01461006c5780634127338614610095575b600080fd5b61007f61007a3660046119ed565b6103d0565b60405161008c9190611b0b565b60405180910390f35b604080516105e081018252600060208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152610fec60e08201819052610100820181905261012082018190526101408201819052610160820181905261018082018190526101a082018190526110736101c08301526101e08201819052610200820181905261022082018190526102408201819052610260820181905261028082018190526102a082018190526102c082018190526102e08201819052610300820181905261032082018190526103408201819052610360820181905261038082018190526103a082018190526103c082018190526103e08201819052610400820181905261042082018190526104408201819052610460820181905261048082018190526104a082018190526104c082018190526104e08201819052610500820181905261052082018190526105408201819052610560820181905261058082018190526105a082018190526105c080830191909152815261007f565b61022b610226366004611b5c565b6107cb565b005b61007f61023b366004611bac565b610acf565b604080516105e081018252600060208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152610fe660e08201819052610fec6101008301819052610ff261012084018190526101408401839052610160840183905261018084018390526101a08401819052610ff86101c085015261106d6101e0850181905261020085018190526102208501819052610240850152610260840182905261028084018390526102a084018390526102c084018290526102e0840182905261107361030085018190526103208501919091526103408401839052610360840181905261038084018390526103a08401919091526103c083018290526103e08301819052610400830181905261042083018190526104408301819052610460830181905261048083018190526104a083018190526104c083018190526104e0830181905261050083018190526105208301526110e26105408301526110e861056083015261058082018190526110ee6105a08301526105c080830191909152815261007f565b606060006103dd85611161565b905060008573ffffffffffffffffffffffffffffffffffffffff1663e0419ae36040518163ffffffff1660e01b81526004016040805180830381865afa15801561042b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044f9190611c10565b60200151905060008060005b86518110156105f3578387828151811061047757610477611c5f565b602002602001015160a0018181525050600285518161049857610498611c8e565b048782815181106104ab576104ab611c5f565b602002602001015160c00181815250506104de888883815181106104d1576104d1611c5f565b60200260200101516107cb565b61050e8782815181106104f3576104f3611c5f565b6020026020010151608001518461129f90919063ffffffff16565b925061054087828151811061052557610525611c5f565b6020026020010151606001518361129f90919063ffffffff16565b915086818151811061055457610554611c5f565b60200260200101516020015187828151811061057257610572611c5f565b60200260200101516040015110156105eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f46494e414c5f535441434b5f494e44455800000000000000000000000000000060448201526064015b60405180910390fd5b60010161045b565b506000828860200151510167ffffffffffffffff811115610616576106166116bc565b60405190808252806020026020018201604052801561063f578160200160208202803683370190505b50905060005b886020015151811015610695578860200151818151811061066857610668611c5f565b602002602001015182828151811061068257610682611c5f565b6020908102919091010152600101610645565b5087515160009067ffffffffffffffff8111156106b4576106b46116bc565b6040519080825280602002602001820160405280156106e757816020015b60608152602001906001900390816106d25790505b50905060005b8951518110156107435761071e878b60000151838151811061071157610711611c5f565b6020026020010151610acf565b82828151811061073057610730611c5f565b60209081029190910101526001016106ed565b506107bb6040518060a00160405280600081526020018567ffffffffffffffff811115610772576107726116bc565b60405190808252806020026020018201604052801561079b578160200160208202803683370190505b5081526020018381526020018481526020018b60200151518152506112b6565b96505050505050505b9392505050565b80518251518110610838576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f4d494e5f534f555243455300000000000000000000000000000000000000000060448201526064016105e2565b60006108637f00000000000000000000000000000000000000000000000000000000000000006113f3565b905060006108907f00000000000000000000000000000000000000000000000000000000000000006113f3565b905060008080600080602088026020018a5101519050805193505b83851015610a54576002850194508481015180601e1a935080601f1a925050600683101561096f57826108ff5789602001515189608001510182106108ef57600080fd5b6040890180516001019052610956565b600183141561091857886040015182106108ef57600080fd5b6002831415610931576040890180516001019052610956565b6003831415610956578860a00151821061094a57600080fd5b60408901805160010190525b600483141561096a5761096a8a8a84611421565b610a37565b8860c0015183106109dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4d41585f4f50434f44450000000000000000000000000000000000000000000060448201526064016105e2565b6020838102888101820151908801909101516109fb8463ffffffff8416565b60408c018051919091039081905260608c0151610a179161129f565b60608c0152610a298463ffffffff8316565b60408c018051909101905250505b604089015160608a0151610a4a9161129f565b60608a01526108ab565b606089015160ff1015610ac3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4d41585f535441434b000000000000000000000000000000000000000000000060448201526064016105e2565b50505050505050505050565b80516060906002810615610b3f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4f44445f534f555243455f4c454e47544800000000000000000000000000000060448201526064016105e2565b60006002600383020467ffffffffffffffff811115610b6057610b606116bc565b6040519080825280601f01601f191660200182016040528015610b8a576020820181803683370190505b509050600660018381018160005b82821015610c125781890151601f1a6002830615610bf45785811015610bc657600182019181908801602101535b858110610bf457600281026002018b015180601e1a83602001890153600183019260ff821690890160210153505b60028306610c055780826020018801535b5060019182019101610b98565b509398975050505050505050565b600080610c4b83604051602001610c379190611cbd565b604051602081830303815290604052610e39565b90508051602082016000f0915073ffffffffffffffffffffffffffffffffffffffff8216610ca5576040517f08d4abb600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50919050565b604080516105e081018252600060208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152610fe660e08201819052610fec6101008301819052610ff261012084018190526101408401839052610160840183905261018084018390526101a08401819052610ff86101c085015261106d6101e0850181905261020085018190526102208501819052610240850152610260840182905261028084018390526102a084018390526102c084018290526102e0840182905261107361030085018190526103208501919091526103408401839052610360840181905261038084018390526103a08401919091526103c083018290526103e08301819052610400830181905261042083018190526104408301819052610460830181905261048083018190526104a083018190526104c083018190526104e0830181905261050083018190526105208301526110e26105408301526110e861056083015261058082018190526110ee6105a08301526105c082810191909152815290565b6060815182604051602001610e4f929190611ce3565b6040516020818303038152906040529050919050565b604080516105e081018252600060208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152610fec60e08201819052610100820181905261012082018190526101408201819052610160820181905261018082018190526101a082018190526110736101c08301526101e08201819052610200820181905261022082018190526102408201819052610260820181905261028082018190526102a082018190526102c082018190526102e08201819052610300820181905261032082018190526103408201819052610360820181905261038082018190526103a082018190526103c082018190526103e08201819052610400820181905261042082018190526104408201819052610460820181905261048082018190526104a082018190526104c082018190526104e08201819052610500820181905261052082018190526105408201819052610560820181905261058082018190526105a082018190526105c082810191909152815290565b50600290565b50600190565b50600390565b6000808211611063576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f305f4f504552414e44000000000000000000000000000000000000000000000060448201526064016105e2565b5060020260010190565b50600090565b60008082116110de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f305f4f504552414e44000000000000000000000000000000000000000000000060448201526064016105e2565b5090565b60020190565b60030190565b6000601f82168061115b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f4241445f4f504552414e4400000000000000000000000000000000000000000060448201526064016105e2565b92915050565b73ffffffffffffffffffffffffffffffffffffffff80821660009081526020819052604081205460609261119591166113f3565b905080516000141561115b5761124261123d8473ffffffffffffffffffffffffffffffffffffffff1663f2cd6c086040518163ffffffff1660e01b8152600401600060405180830381865afa1580156111f2573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526112389190810190611d7a565b6114c0565b610c20565b73ffffffffffffffffffffffffffffffffffffffff848116600090815260208190526040902080547fffffffffffffffffffffffff000000000000000000000000000000000000000016929091169190911790556107c483611161565b6000818310156112af57816107c4565b5090919050565b606060008260600151905060006018846040015151901b60108560800151901b6008866020015151901b866060015151171717905060008160001b836040516020016113029190611df1565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905261133e9291602001611e27565b604051602081830303815290604052905060005b8560400151518110156113ea57818660400151828151811061137657611376611c5f565b60200260200101515160001b8760400151838151811061139857611398611c5f565b60200260200101516040516020016113b293929190611e4d565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190529150600101611352565b50949350505050565b606061115b8260017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6115ca565b6040820180517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600584901c918290030191829052606084015160019091019161146b919061129f565b6060840152608083015161147f908261129f565b60808401528251600783168085526001600385811c161b919060005b838110156114b5576114ad88886107cb565b60010161149b565b505090935250505050565b606060208251816114d3576114d3611c8e565b061561153b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4241445f464e5f505452535f4c454e475448000000000000000000000000000060448201526064016105e2565b6000601083518161154e5761154e611c8e565b0467ffffffffffffffff811115611567576115676116bc565b6040519080825280601f01601f191660200182016040528015611591576020820181803683370190505b509050600060025b84518210156115c1578083018051602084880181015190911790915290910190600201611599565b50909392505050565b6060833b806115e95750506040805160208101909152600081526107c4565b808411156116075750506040805160208101909152600081526107c4565b83831015611652576040517f2c4a89fa0000000000000000000000000000000000000000000000000000000081526004810182905260248101859052604481018490526064016105e2565b83830384820360008282106116675782611669565b815b60408051603f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168101909152818152955090508087602087018a3c505050509392505050565b6116ba611e84565b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561170e5761170e6116bc565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561175b5761175b6116bc565b604052919050565b600067ffffffffffffffff82111561177d5761177d6116bc565b5060051b60200190565b600067ffffffffffffffff8211156117a1576117a16116bc565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126117de57600080fd5b81356117f16117ec82611787565b611714565b81815284602083860101111561180657600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261183457600080fd5b813560206118446117ec83611763565b82815260059290921b8401810191818101908684111561186357600080fd5b8286015b8481101561187e5780358352918301918301611867565b509695505050505050565b60006040828403121561189b57600080fd5b6118a36116eb565b9050813567ffffffffffffffff808211156118bd57600080fd5b818401915084601f8301126118d157600080fd5b813560206118e16117ec83611763565b82815260059290921b8401810191818101908884111561190057600080fd5b8286015b848110156119385780358681111561191c5760008081fd5b61192a8b86838b01016117cd565b845250918301918301611904565b508652508581013593508284111561194f57600080fd5b61195b87858801611823565b818601525050505092915050565b600060e0828403121561197b57600080fd5b60405160e0810181811067ffffffffffffffff8211171561199e5761199e6116bc565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c08201525092915050565b600080600060608486031215611a0257600080fd5b833573ffffffffffffffffffffffffffffffffffffffff81168114611a2657600080fd5b925060208481013567ffffffffffffffff80821115611a4457600080fd5b611a5088838901611889565b94506040870135915080821115611a6657600080fd5b508501601f81018713611a7857600080fd5b8035611a866117ec82611763565b81815260e0918202830184019184820191908a841115611aa557600080fd5b938501935b83851015611acb57611abc8b86611969565b83529384019391850191611aaa565b5080955050505050509250925092565b60005b83811015611af6578181015183820152602001611ade565b83811115611b05576000848401525b50505050565b6020815260008251806020840152611b2a816040850160208701611adb565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6000806101008385031215611b7057600080fd5b823567ffffffffffffffff811115611b8757600080fd5b611b9385828601611889565b925050611ba38460208501611969565b90509250929050565b60008060408385031215611bbf57600080fd5b823567ffffffffffffffff80821115611bd757600080fd5b611be3868387016117cd565b93506020850135915080821115611bf957600080fd5b50611c06858286016117cd565b9150509250929050565b600060408284031215611c2257600080fd5b6040516040810181811067ffffffffffffffff82111715611c4557611c456116bc565b604052825181526020928301519281019290925250919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000815260008251611cd6816001850160208701611adb565b9190910160010192915050565b7f630000000000000000000000000000000000000000000000000000000000000081527fffffffff000000000000000000000000000000000000000000000000000000008360e01b1660018201527f80600e6000396000f30000000000000000000000000000000000000000000000600582015260008251611d6c81600e850160208701611adb565b91909101600e019392505050565b600060208284031215611d8c57600080fd5b815167ffffffffffffffff811115611da357600080fd5b8201601f81018413611db457600080fd5b8051611dc26117ec82611787565b818152856020838501011115611dd757600080fd5b611de8826020830160208601611adb565b95945050505050565b815160009082906020808601845b83811015611e1b57815185529382019390820190600101611dff565b50929695505050505050565b82815260008251611e3f816020850160208701611adb565b919091016020019392505050565b60008451611e5f818460208901611adb565b82018481528351611e77816020808501908801611adb565b0160200195945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fdfea2646970667358221220e281a34ecd16e57ba36c262b7a828b0e9ee7cf7118913f722b42b86943e5471664736f6c634300080a0033";

type AllStandardOpsStateBuilderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AllStandardOpsStateBuilderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AllStandardOpsStateBuilder__factory extends ContractFactory {
  constructor(...args: AllStandardOpsStateBuilderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AllStandardOpsStateBuilder> {
    return super.deploy(overrides || {}) as Promise<AllStandardOpsStateBuilder>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AllStandardOpsStateBuilder {
    return super.attach(address) as AllStandardOpsStateBuilder;
  }
  connect(signer: Signer): AllStandardOpsStateBuilder__factory {
    return super.connect(signer) as AllStandardOpsStateBuilder__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AllStandardOpsStateBuilderInterface {
    return new utils.Interface(_abi) as AllStandardOpsStateBuilderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AllStandardOpsStateBuilder {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AllStandardOpsStateBuilder;
  }
}
